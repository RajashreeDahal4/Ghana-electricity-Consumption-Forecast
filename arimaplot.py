# -*- coding: utf-8 -*-
"""forecastplot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t5uCxXS70yjh0v2KNNdIi4I5BXbsG6I7
"""

from google.colab import drive
drive.mount('/content/drive')

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
import os
from os import listdir
path='/content/drive/My Drive/forecastplot.xlsx'

import pandas as pd
import matplotlib as plt
# %matplotlib inline
import numpy as np
file=pd.read_excel(path)

file.head()

len(file["Arim Predicton"])

import sklearn
from sklearn.metrics import mean_absolute_error
expected = file['Actual'][:40]
print(expected.shape)
predictions = file['Arima Predicton'][:40]
print(predictions.shape)

mae = mean_absolute_error(expected, predictions)
print('MAE: %f' % mae)

from sklearn.metrics import mean_squared_error
expected = file['Actual'][:40]
predictions = file['Arima Predicton'][:40]
mse = mean_squared_error(expected, predictions)
print('MSE: %f' % mse)

from sklearn.metrics import mean_squared_error
from math import sqrt
expected = file['Actual'][:40]
predictions = file['Arima Predicton'][:40]
mse = mean_squared_error(expected, predictions)
rmse = sqrt(mse)
print('RMSE: %f' % rmse)

def MAPE(Y_actual,Y_Predicted):
    mape = np.mean(np.abs((Y_actual - Y_Predicted)/Y_actual))*100
    return mape

MAPE(file["Actual"],file["Arima Predicton"])

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline
import numpy as np
import pandas as pd

plt.plot(file['Year'],file["Actual"],label="Actual")
plt.plot(file["Year"],file["Arima Predicton"],label="ARIMAX Prediction")
plt.xlabel("Time in years")
plt.ylabel("Electricity consumption in Billion KWhr")
plt.legend()

